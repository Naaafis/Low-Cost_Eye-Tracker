The difficulties presented by this weeks task came from installing Dlib itself. While this library is known to perform well on face detection, it does not seem like it would be possible to mount this library onto an ESP32 due to the sheer amount of prequisites. I was directed to install boost, cmake, scikit-image, scipy and eventually had to settle for a solution using conda-forge to install this library. While turning my computer into a server, or deploying the requirements into an actual AWS EC2 server would allow for the implementation of these prerequisites, it would be nearly impossible to do the same on a resource-constrained microcontroller. 

Great learning experience installing the libraries none the less. I was forced to look up every library's purpose after analyzing imports of pre-existing eye-tracking project. This allowed me to not only complete the "resources" section of our proposal, but also understand the various use cases behind aforementioned libraries. Additionally, I got refreshed on how to create a python virtual environment using `conda create --name eye_tracker python=3` and how to activate the environment using `conda activate eye_tracker`. I also got reminded to check each library installation using `pip show [library name]`. Of course, in order for that command to work, the library had to be installed using `pip`. Thank god my computer was already equipped with pip, Homebrew and Anaconda. The aliases for these package managers were also properly setup for my liking. This made the installation process much smoother. The `dlib` library was insalled using conda-forge, and its installation was verified using `conda list dlib`. Lastly, the requirements.txt file thst has already been compiled was created using the command `pip freeze > requirements.txt`. This way, all the installed libraries for the specific virtual environment that I created for this project are the only ones that is present in that file.

Lastly, I downloaded the dataset provided by citation [7] in the proposal. It is 1.99Gbs in storage so I will not bother to upload the data to Github. 
